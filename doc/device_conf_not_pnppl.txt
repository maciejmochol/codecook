device_conf_not_pnp.txt
=======================

Plik konfiguracyjny sterownikÛw PLC w systemie Codecook - bez obs≥ugi PnP
-------------------------------------------------------------------------

Zadaniem kaødego sterownika PLC systemu "codecook" jest dostarczenie jakiegoú
drzewa parametrÛw wraz z odpowiadajπcymi mu kana≥ami opisujπcymi zmienne i
sta≥e parametru. W systemie bÍdπ standardowe nazwy kana≥Ûw i moøliwoúci definiowania 
nowych (np. niestandardowych úrednich). W chwili obecnej nie jest znana dok≥adna 
specyfikacja definicji nowych kana≥Ûw. Na pewno sterownik bÍdzie mia≥ moøliwoúÊ 
utworzenia w≥asnego kana≥u dla parametru, np. w celach informacyjnych. 
Kana≥y w parametrach mogπ byÊ zmienne lub sta≥e. Zmienne - czyli np. wartoúÊ
bieøπca danego parametru - definiowane sπ przez kod sterownika. Natomiast
kana≥y sta≥e, jak np. nazwa jednostki wielkoúci fizycznej ktÛrπ opisuje
parametr - bÍdπ konfigurowane przez plik konfiguracyjny.
	Dla wszystkich parametrÛw zdefiniowanych w jednym pliku bÍdπ dostÍpne te same 
kana≥y. Zatem plik konfiguracyjny sk≥ada siÍ z definicji kana≥Ûw i definicji parametrÛw.

Definicja ma sk≥adniÍ:

<wartoúÊ>{,<wartoúÊ>}+

Czyli np.

ala,ela
ula,ela,ala,ola

Nazwa definicji def_channel oznacza definicjÍ kana≥u.

Przyk≥adowo:
def_channel,PATH
def_channel,NAME
def_channel,UNIT
def_channel,MIN
def_channel,MAX
def_channel,SYMBOL
def_channel,WRITETODB

Definicje kana≥Ûw wymuszajπ sk≥adnie pozosta≥ych definicji.
Jeøeli zdefiniujemy kana≥y ch1, ch2, ch3, ch4, to definicje parametrÛw bÍdπ
musia≥y mieÊ postaÊ

<wartoúÊ1>,<wartoúc2>,<wartoúc3>,<wartoúÊ4>

W ten sposÛb zdefiniujemy parametr, ktÛry poszczegÛlnym kana≥om bÍdzie mia≥
przypisane wartoúci:

ch1 - wartoúÊ1
....

Definicje kana≥Ûw wystÍpujπ przed definicjami parametrÛw.
WartoúÊ moøe wystÍpowaÊ w apostrofach - w celu wyspecyfikowania np.
przecinka.

Zatem przyk≥adowy plik konfiguracyjny sterownika wyglπda tak:

def_channel,PATH
def_channel,NAME
def_channel,UNIT
def_channel,MIN
def_channel,MAX
def_channel,SYMBOL
def_channel,WRITETODB
Odgazowywacz:Twyj,Temperatura wyjúciowa odgazowywacza,st. C,0,100,Twyj,0
Odgazowywacz:Twej,"Temperatura wejúciowa odgazowywacza 1,2",st. C,0,100,Twej,1

Sk≥adnia pliku konfiguracyjnego dla programu flex
-------------------------------------------------

%s DEF_QUOTED_ID

ID			[?!:.a-zA-Z0-9πÊÍ≥ÒÛúøü•∆ £—”åØè ]+
COMMA			","
DEF_CHANNEL		"def_channel"
COMMENT			"#"[^\n]*\n
QUOTED_ID		([^\"^\n]*)

	void DefItem(char*);

	int is_initial = 1;
	int define_channel = 0;

%option NOYYWRAP

%%

{COMMENT}	;

{COMMA}		; 

{DEF_CHANNEL}	define_channel = 1;

\"		{
                 if (is_initial) {
		  BEGIN(DEF_QUOTED_ID);
                  is_initial = 0;
                 } 
                 else { 
		  BEGIN(INITIAL);
                  is_initial = 1; 
                 };
                }

<DEF_QUOTED_ID>{QUOTED_ID}	DefItem(yytext);

{ID}				DefItem(yytext);


[ \t\n]+	;	

.		printf("Unknown character: #%s#\n", yytext);
	
 
%%

/* definicje i zmienne */

#define MAX_CHANNELS 20
#define MAX_PARAMS 200
char *channels[MAX_CHANNELS];
int channels_num = 0;
int item_num = 0;

typedef struct {
	char *values[MAX_CHANNELS];
} ParamRec;

ParamRec params[MAX_PARAMS];
int params_num = 0;

void Fatal(char *s)
{
	fprintf(stderr, "%s\n", s);
	exit(-1);
}

void DefItem(char *s)
{
 if (define_channel) {
	printf("Channel %s\n", s);
	define_channel = 0;
	channels_num++;
	channels[channels_num-1] = (char*) strdup(s);
 }
 else {
	if (!channels_num) Fatal("No channels defined !");
	printf("Adding item %d '%s' ", item_num, s);
	printf("to channel %s (param %d)\n", channels[item_num %
		channels_num], item_num/channels_num);
	params[item_num/channels_num].values[item_num % channels_num] =
		(char*) strdup(s);
	item_num++;
 }
}

/* main */

main()
{
	yylex();
}



